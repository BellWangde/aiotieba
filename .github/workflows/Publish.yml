name: Publish

on:
  push:
    tags:
      - "*"
  workflow_dispatch:

jobs:
  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: ["ubuntu-latest", "windows-latest"]

    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-python@v4

      - name: Install cibuildwheel
        run: pip install cibuildwheel

      - name: Build wheels
        run: python -m cibuildwheel --output-dir wheelhouse
        env:
          CIBW_BUILD: "cp38-* cp39-* cp310-* cp311-*"

      - uses: actions/upload-artifact@v3
        with:
          name: dist
          path: ./wheelhouse/*.whl

  publish:
    name: Publish
    needs: build_wheels
    runs-on: ubuntu-latest

    environment:
      name: publish

    env:
      PYTHON_VER: "3.11"

    steps:
      - name: Checkout master
        if: ${{ github.event_name == "push" }}
        uses: actions/checkout@v3
        with:
          ref: master

      - name: Checkout develop
        if: ${{ github.event_name == "workflow_dispatch" }}
        uses: actions/checkout@v3
        with:
          ref: develop

      - name: Set up Python ${{ env.PYTHON_VER }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VER }}

      - name: Install dependencies
        run: |
          python -m pip install -U pip
          pip install -U twine

      - name: Download distributions
        uses: actions/download-artifact@v3
        with:
          name: dist
          path: dist

      - name: Publish to PyPI
        if: ${{ github.event_name == "push" }}
        run: twine upload dist/* -u __token__ -p ${{ secrets.PYPI_TOKEN }}

      - name: Publish to TestPyPI
        if: ${{ github.event_name == "workflow_dispatch" }}
        run: twine upload -r testpypi dist/* -u __token__ -p ${{ secrets.TESTPYPI_TOKEN }}
